<!--
Copyright 2014 Anatole Tresch and other (see authors).

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
   http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.javaconfig</groupId>
        <artifactId>tamaya-all</artifactId>
        <version>0.1-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

	<groupId>org.javaconfig</groupId>
	<artifactId>tamaya-api</artifactId>

	<name>Tamaya - API</name>
    <description>The API defines a complete SE based API for reading, creating an dmanaging of configuration and
    environment data.</description>
	<packaging>jar</packaging>

    <properties>
        <maven.compile.targetLevel>1.8</maven.compile.targetLevel>
        <maven.compile.sourceLevel>1.8</maven.compile.sourceLevel>
    </properties>

	<build>
		<pluginManagement>
			<plugins>
				<!-- ======================================================= -->
				<!-- Packaging (OSGi bundle) -->
				<!-- =======================================================
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.3.5</version>
					<extensions>true</extensions>
					<configuration>
						<instructions>
                            <Private-Package>!*</Private-Package>
							<Export-Package>org.javaconfig.annot.*</Export-Package>
                            <Export-Package>org.javaconfig.spi.*</Export-Package>
                            <Export-Package>org.javaconfig.*</Export-Package>
                        </instructions>
					</configuration>
				</plugin>
				 -->
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>1.5.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${maven.compile.sourceLevel}</source>
                        <target>${maven.compile.targetLevel}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.7.2.201409121644</version>
                </plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- ======================================================= -->
			<!-- Packaging (OSGi bundle) -->
			<!-- =======================================================
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>
			-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <configuration>
                    <sourceDirectory>src/main/asciidoc</sourceDirectory>
                    <baseDir>${project.basedir}</baseDir>
                    <eruby>erubis</eruby>
                </configuration>
                <executions>
                    <execution>
                        <id>output-html</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/docs</outputDirectory>
                            <!-- sourceHighlighter>highlightjs</sourceHighlighter -->
                            <sourceHighlighter>coderay</sourceHighlighter>
                            <backend>html</backend>
                            <embedAssets>true</embedAssets>
                            <imagesDir>src/main/asciidoc/images/</imagesDir>
                            <baseDir>src/main/asciidoc/</baseDir>
                        </configuration>
                    </execution>
                    <!-- execution>
                        <id>output-pdf</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <sourceDocumentName>test.adoc</sourceDocumentName>
                            <outputDirectory>target/docs</outputDirectory>
                            <sourceHighlighter>coderay</sourceHighlighter>
                            <backend>pdf</backend>
                            <doctype>book</doctype>
                        </configuration>
                    </execution -->
                    <!--execution>
                        <id>output-docbook</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>docbook</backend>
                            <doctype>book</doctype>
                            <embedAssets>false</embedAssets>
                            <outputDirectory>target/generated-docs</outputDirectory>
                            <imagesDir>src/main/asciidoc/images/</imagesDir>
                            <baseDir>src/main/asciidoc/</baseDir>
                        </configuration>
                    </execution-->
                </executions>
            </plugin>
		</plugins>
	</build>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>deployToGithub</id>
            <activation>
                <property>
                    <name>gh</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <github.global.server>github</github.global.server>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.github.github</groupId>
                            <artifactId>site-maven-plugin</artifactId>
                            <version>0.9</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>2.8.1</version>
                        <configuration>
                            <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.github.github</groupId>
                        <artifactId>site-maven-plugin</artifactId>
                        <version>0.10</version>
                        <configuration>
                            <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
                            <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
                            <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
                            <branch>refs/heads/master</branch>                       <!-- remote branch name -->
                            <includes><include>**/*</include></includes>
                            <repositoryName>mvn-repo</repositoryName>      <!-- github repo name -->
                            <repositoryOwner>java-config</repositoryOwner>    <!-- github username  -->
                            <merge>true</merge>
                        </configuration>
                        <executions>
                            <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                            <execution>
                                <goals>
                                    <goal>site</goal>
                                </goals>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <distributionManagement>
                <repository>
                    <id>internal.repo</id>
                    <name>Temporary Staging Repository</name>
                    <url>file://${project.build.directory}/mvn-repo</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>

</project>
